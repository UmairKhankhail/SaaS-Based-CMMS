version: '3.4'

networks:
  backend:

services:
  redis:
    container_name: Redis
    image: redis
    ports:
      - 6379:6379
    networks:
      - backend

 

  accountsdb:
    container_name: Accounts-Database
    image: mysql:8.0.33-oracle
    environment:
     - MYSQL_ROOT_PASSWORD=cmms2022
    ports:
     - 8012:3306
    networks:
      - backend

  accountswebapi:
    container_name: Accounts-Microservice
    image: ${DOCKER_REGISTRY-}accountswebapi
    build:
      context: .
      dockerfile: AccountsWebApi/Dockerfile
    networks:
      - backend
    environment:
      - DB_HOST=accountsdb
      - DB_NAME=accounts
      - DB_ROOT_PASSWORD=cmms2022


  inventoriesdb:
    container_name: Inventories-Database
    image: mysql:8.0.33-oracle
    environment:
     - MYSQL_ROOT_PASSWORD=cmms2022
    ports:
     - 8011:3306
    networks:
      - backend

  inventorywebapi:
    container_name: Inventory-Microservice
    image: ${DOCKER_REGISTRY-}inventorywebapi
    build:
      context: .
      dockerfile: InventoryWebApi/Dockerfile
    networks:
      - backend
    environment:
      - DB_HOST=inventoriesdb
      - DB_NAME=inventories
      - DB_ROOT_PASSWORD=cmms2022


  apigateway:
    container_name: api-gateway
    image: ${DOCKER_REGISTRY-}apigateway
    build:
      context: .
      dockerfile: ApiGateway/Dockerfile
    networks:
      - backend
    ports:
      - 8007:80

  assetsdb:
     container_name: Assets-Database
     image: mysql:8.0.33-oracle
     environment:
      - MYSQL_ROOT_PASSWORD=cmms2022
     ports:
      - 8013:3306
     networks:
      - backend

  assetwebapi:
    container_name: Assets-Microservice
    image: ${DOCKER_REGISTRY-}assetwebapi
    build:
      context: .
      dockerfile: AssetWebApi/Dockerfile
    networks:
      - backend
    environment:
      - DB_HOST=assetsdb
      - DB_NAME=assets
      - DB_ROOT_PASSWORD=cmms2022
    
  
  maintenancedb:
     container_name: Maintenance-Database
     image: mysql:8.0.33-oracle
     environment:
      - MYSQL_ROOT_PASSWORD=cmms2022
     ports:
      - 8014:3306
     networks:
      - backend

  maintenancewebapi:
    container_name: Maintenance-Microservice
    image: ${DOCKER_REGISTRY-}maintenancewebapi
    build:
      context: .
      dockerfile: MaintenanceWebApi/Dockerfile
    networks:
        - backend
    environment:
     - DB_HOST=maintenancedb
     - DB_NAME=maintenance
     - DB_ROOT_PASSWORD=cmms2022


  preventivemaintenancedb:
    container_name: Preventivemaintenance-Database
    image: mysql:8.0.33-oracle
    environment:
     - MYSQL_ROOT_PASSWORD=cmms2022
    ports:
     - 8015:3306
    networks:
     - backend

  preventivemaintenancewebapi:
    container_name: Preventivemaintenance-Microservice
    image: ${DOCKER_REGISTRY-}preventivemaintenancewebapi
    build:
      context: .
      dockerfile: PreventiveMaintenanceWebApi/Dockerfile
    networks:
        - backend
    environment:
     - DB_HOST=preventivemaintenancedb
     - DB_NAME=preventivemaintenance
     - DB_ROOT_PASSWORD=cmms2022

