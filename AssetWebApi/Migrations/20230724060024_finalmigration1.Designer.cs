// <auto-generated />
using AssetWebApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AssetWebApi.Migrations
{
    [DbContext(typeof(AssetDbContext))]
    [Migration("20230724060024_finalmigration1")]
    partial class finalmigration1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("AssetWebApi.Models.EquipmentAsset", b =>
                {
                    b.Property<int>("eAssetAuotoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("brandNmae")
                        .HasColumnType("longtext");

                    b.Property<string>("code")
                        .HasColumnType("longtext");

                    b.Property<string>("companyId")
                        .HasColumnType("longtext");

                    b.Property<string>("deptId")
                        .HasColumnType("longtext");

                    b.Property<string>("description")
                        .HasColumnType("longtext");

                    b.Property<string>("eAssetId")
                        .HasColumnType("longtext");

                    b.Property<string>("eAssetName")
                        .HasColumnType("longtext");

                    b.Property<int>("eAutoId")
                        .HasColumnType("int");

                    b.Property<string>("flId")
                        .HasColumnType("longtext");

                    b.Property<string>("subDeptId")
                        .HasColumnType("longtext");

                    b.HasKey("eAssetAuotoId");

                    b.HasIndex("eAutoId");

                    b.ToTable("equipmentAssets");
                });

            modelBuilder.Entity("AssetWebApi.Models.EquipmentModel", b =>
                {
                    b.Property<int>("eAutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("companyId")
                        .HasColumnType("longtext");

                    b.Property<string>("eId")
                        .HasColumnType("longtext");

                    b.Property<string>("eName")
                        .HasColumnType("longtext");

                    b.Property<string>("status")
                        .HasColumnType("longtext");

                    b.HasKey("eAutoId");

                    b.ToTable("equipmentModels");
                });

            modelBuilder.Entity("AssetWebApi.Models.EquipmentSubItem", b =>
                {
                    b.Property<int>("esAutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("companyId")
                        .HasColumnType("longtext");

                    b.Property<int>("eAutoId")
                        .HasColumnType("int");

                    b.Property<string>("esDescription")
                        .HasColumnType("longtext");

                    b.Property<string>("esName")
                        .HasColumnType("longtext");

                    b.Property<int>("esParentId")
                        .HasColumnType("int");

                    b.Property<string>("esPosition")
                        .HasColumnType("longtext");

                    b.HasKey("esAutoId");

                    b.HasIndex("eAutoId");

                    b.ToTable("equipmentSubItems");
                });

            modelBuilder.Entity("AssetWebApi.Models.LinearAsset", b =>
                {
                    b.Property<int>("lAssetAuotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("code")
                        .HasColumnType("longtext");

                    b.Property<string>("companyId")
                        .HasColumnType("longtext");

                    b.Property<string>("deptId")
                        .HasColumnType("longtext");

                    b.Property<string>("description")
                        .HasColumnType("longtext");

                    b.Property<string>("flId")
                        .HasColumnType("longtext");

                    b.Property<string>("lAssetId")
                        .HasColumnType("longtext");

                    b.Property<string>("laAssetName")
                        .HasColumnType("longtext");

                    b.Property<int>("laAutoId")
                        .HasColumnType("int");

                    b.Property<string>("subDeptId")
                        .HasColumnType("longtext");

                    b.HasKey("lAssetAuotId");

                    b.HasIndex("laAutoId");

                    b.ToTable("linearAssets");
                });

            modelBuilder.Entity("AssetWebApi.Models.LinearAssetModel", b =>
                {
                    b.Property<int>("laAutoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("companyId")
                        .HasColumnType("longtext");

                    b.Property<string>("laID")
                        .HasColumnType("longtext");

                    b.Property<string>("laName")
                        .HasColumnType("longtext");

                    b.Property<string>("status")
                        .HasColumnType("longtext");

                    b.HasKey("laAutoID");

                    b.ToTable("linearAssetModels");
                });

            modelBuilder.Entity("AssetWebApi.Models.LinearSubItem", b =>
                {
                    b.Property<int>("lsAutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("companyId")
                        .HasColumnType("longtext");

                    b.Property<string>("description")
                        .HasColumnType("longtext");

                    b.Property<int>("laAutoId")
                        .HasColumnType("int");

                    b.Property<string>("location")
                        .HasColumnType("longtext");

                    b.Property<string>("lsName")
                        .HasColumnType("longtext");

                    b.HasKey("lsAutoId");

                    b.HasIndex("laAutoId");

                    b.ToTable("linearSubItems");
                });

            modelBuilder.Entity("AssetWebApi.Models.EquipmentAsset", b =>
                {
                    b.HasOne("AssetWebApi.Models.EquipmentModel", "equipmentModel")
                        .WithMany()
                        .HasForeignKey("eAutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("equipmentModel");
                });

            modelBuilder.Entity("AssetWebApi.Models.EquipmentSubItem", b =>
                {
                    b.HasOne("AssetWebApi.Models.EquipmentModel", "equipmentModel")
                        .WithMany()
                        .HasForeignKey("eAutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("equipmentModel");
                });

            modelBuilder.Entity("AssetWebApi.Models.LinearAsset", b =>
                {
                    b.HasOne("AssetWebApi.Models.LinearAssetModel", "linearAssetModel")
                        .WithMany()
                        .HasForeignKey("laAutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("linearAssetModel");
                });

            modelBuilder.Entity("AssetWebApi.Models.LinearSubItem", b =>
                {
                    b.HasOne("AssetWebApi.Models.LinearAssetModel", "linearAssetModel")
                        .WithMany()
                        .HasForeignKey("laAutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("linearAssetModel");
                });
#pragma warning restore 612, 618
        }
    }
}
