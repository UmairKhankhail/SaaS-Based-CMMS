// <auto-generated />
using System;
using MaintenanceWebApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MaintenanceWebApi.Migrations
{
    [DbContext(typeof(MaintenanceDbContext))]
    partial class MaintenanceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MaintenanceWebApi.Models.Evaluation", b =>
                {
                    b.Property<int>("evaluationAutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("companyId")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("endTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("evaluationId")
                        .HasColumnType("longtext");

                    b.Property<string>("remarks")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("startTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("topName")
                        .HasColumnType("longtext");

                    b.Property<string>("userName")
                        .HasColumnType("longtext");

                    b.Property<int>("woAutoId")
                        .HasColumnType("int");

                    b.HasKey("evaluationAutoId");

                    b.HasIndex("woAutoId");

                    b.ToTable("evaluations");
                });

            modelBuilder.Entity("MaintenanceWebApi.Models.Execution", b =>
                {
                    b.Property<int>("executionAutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("companyId")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("endTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("executionId")
                        .HasColumnType("longtext");

                    b.Property<string>("remarks")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("startTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("topName")
                        .HasColumnType("longtext");

                    b.Property<string>("userName")
                        .HasColumnType("longtext");

                    b.Property<int>("woAutoId")
                        .HasColumnType("int");

                    b.HasKey("executionAutoId");

                    b.HasIndex("woAutoId");

                    b.ToTable("executions");
                });

            modelBuilder.Entity("MaintenanceWebApi.Models.HealthAndSafety", b =>
                {
                    b.Property<int>("hsAutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("companyId")
                        .HasColumnType("longtext");

                    b.Property<string>("remarks")
                        .HasColumnType("longtext");

                    b.Property<string>("userName")
                        .HasColumnType("longtext");

                    b.Property<int>("woAutoId")
                        .HasColumnType("int");

                    b.HasKey("hsAutoId");

                    b.HasIndex("woAutoId");

                    b.ToTable("healthAndSafeties");
                });

            modelBuilder.Entity("MaintenanceWebApi.Models.HealthAndSafetyItems", b =>
                {
                    b.Property<int>("hsiAutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("companyId")
                        .HasColumnType("longtext");

                    b.Property<int>("hsAutoId")
                        .HasColumnType("int");

                    b.Property<int>("phsAutoId")
                        .HasColumnType("int");

                    b.Property<int>("woAutoId")
                        .HasColumnType("int");

                    b.HasKey("hsiAutoId");

                    b.HasIndex("hsAutoId");

                    b.HasIndex("phsAutoId");

                    b.HasIndex("woAutoId");

                    b.ToTable("HealthAndSafetyItems");
                });

            modelBuilder.Entity("MaintenanceWebApi.Models.Instruction", b =>
                {
                    b.Property<int>("insAutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("companyId")
                        .HasColumnType("longtext");

                    b.Property<int>("pAutoId")
                        .HasColumnType("int");

                    b.Property<int>("woAutoId")
                        .HasColumnType("int");

                    b.HasKey("insAutoId");

                    b.HasIndex("pAutoId");

                    b.HasIndex("woAutoId");

                    b.ToTable("instructions");
                });

            modelBuilder.Entity("MaintenanceWebApi.Models.Method", b =>
                {
                    b.Property<int>("mtAutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("assetName")
                        .HasColumnType("longtext");

                    b.Property<string>("companyId")
                        .HasColumnType("longtext");

                    b.Property<string>("downTimeValue")
                        .HasColumnType("longtext");

                    b.Property<string>("mtName")
                        .HasColumnType("longtext");

                    b.HasKey("mtAutoId");

                    b.ToTable("methods");
                });

            modelBuilder.Entity("MaintenanceWebApi.Models.MethodSteps", b =>
                {
                    b.Property<int>("msAutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("companyId")
                        .HasColumnType("longtext");

                    b.Property<string>("description")
                        .HasColumnType("longtext");

                    b.Property<int>("mtAutoId")
                        .HasColumnType("int");

                    b.Property<string>("timeRequired")
                        .HasColumnType("longtext");

                    b.Property<string>("toolRequired")
                        .HasColumnType("longtext");

                    b.HasKey("msAutoId");

                    b.HasIndex("mtAutoId");

                    b.ToTable("methodSteps");
                });

            modelBuilder.Entity("MaintenanceWebApi.Models.Procedure", b =>
                {
                    b.Property<int>("pAutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("assetName")
                        .HasColumnType("longtext");

                    b.Property<string>("companyId")
                        .HasColumnType("longtext");

                    b.Property<string>("pName")
                        .HasColumnType("longtext");

                    b.Property<string>("tom")
                        .HasColumnType("longtext");

                    b.HasKey("pAutoId");

                    b.ToTable("procedures");
                });

            modelBuilder.Entity("MaintenanceWebApi.Models.ProcedureHealthAndSafety", b =>
                {
                    b.Property<int>("phsAutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("companyId")
                        .HasColumnType("longtext");

                    b.Property<string>("cpName")
                        .HasColumnType("longtext");

                    b.Property<string>("description")
                        .HasColumnType("longtext");

                    b.Property<int>("pAutoId")
                        .HasColumnType("int");

                    b.HasKey("phsAutoId");

                    b.HasIndex("pAutoId");

                    b.ToTable("procedureHealthAndSafeties");
                });

            modelBuilder.Entity("MaintenanceWebApi.Models.ProcedureMethod", b =>
                {
                    b.Property<int>("pmAutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("companyId")
                        .HasColumnType("longtext");

                    b.Property<int>("pAutoId")
                        .HasColumnType("int");

                    b.Property<string>("pmName")
                        .HasColumnType("longtext");

                    b.Property<string>("subItemPosition")
                        .HasColumnType("longtext");

                    b.HasKey("pmAutoId");

                    b.HasIndex("pAutoId");

                    b.ToTable("procedureMethods");
                });

            modelBuilder.Entity("MaintenanceWebApi.Models.StatusAndRepair", b =>
                {
                    b.Property<int>("srAutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("companyId")
                        .HasColumnType("longtext");

                    b.Property<string>("faultyNotFaulty")
                        .HasColumnType("longtext");

                    b.Property<string>("itemName")
                        .HasColumnType("longtext");

                    b.Property<string>("srId")
                        .HasColumnType("longtext");

                    b.Property<string>("username")
                        .HasColumnType("longtext");

                    b.Property<int>("woAutoId")
                        .HasColumnType("int");

                    b.Property<string>("worker")
                        .HasColumnType("longtext");

                    b.HasKey("srAutoId");

                    b.HasIndex("woAutoId");

                    b.ToTable("statusAndRepairs");
                });

            modelBuilder.Entity("MaintenanceWebApi.Models.WOItems", b =>
                {
                    b.Property<int>("woItemsAutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("companyId")
                        .HasColumnType("longtext");

                    b.Property<string>("cost")
                        .HasColumnType("longtext");

                    b.Property<string>("quantity")
                        .HasColumnType("longtext");

                    b.Property<string>("requestStatus")
                        .HasColumnType("longtext");

                    b.Property<string>("stock")
                        .HasColumnType("longtext");

                    b.Property<int>("woAutoId")
                        .HasColumnType("int");

                    b.Property<string>("woItemsId")
                        .HasColumnType("longtext");

                    b.HasKey("woItemsAutoId");

                    b.HasIndex("woAutoId");

                    b.ToTable("wOItems");
                });

            modelBuilder.Entity("MaintenanceWebApi.Models.WorkOrder", b =>
                {
                    b.Property<int>("woAutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("assetDetials")
                        .HasColumnType("longtext");

                    b.Property<string>("companyId")
                        .HasColumnType("longtext");

                    b.Property<int>("requestId")
                        .HasColumnType("int");

                    b.Property<string>("topName")
                        .HasColumnType("longtext");

                    b.Property<string>("woId")
                        .HasColumnType("longtext");

                    b.Property<string>("woType")
                        .HasColumnType("longtext");

                    b.HasKey("woAutoId");

                    b.ToTable("workOrders");
                });

            modelBuilder.Entity("MaintenanceWebApi.Models.WorkRequest", b =>
                {
                    b.Property<int>("wrAutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("approve")
                        .HasColumnType("longtext");

                    b.Property<string>("companyId")
                        .HasColumnType("longtext");

                    b.Property<string>("description")
                        .HasColumnType("longtext");

                    b.Property<string>("topName")
                        .HasColumnType("longtext");

                    b.Property<string>("username")
                        .HasColumnType("longtext");

                    b.HasKey("wrAutoId");

                    b.ToTable("workRequests");
                });

            modelBuilder.Entity("MaintenanceWebApi.Models.Evaluation", b =>
                {
                    b.HasOne("MaintenanceWebApi.Models.WorkOrder", "WorkOrder")
                        .WithMany()
                        .HasForeignKey("woAutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkOrder");
                });

            modelBuilder.Entity("MaintenanceWebApi.Models.Execution", b =>
                {
                    b.HasOne("MaintenanceWebApi.Models.WorkOrder", "WorkOrder")
                        .WithMany()
                        .HasForeignKey("woAutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkOrder");
                });

            modelBuilder.Entity("MaintenanceWebApi.Models.HealthAndSafety", b =>
                {
                    b.HasOne("MaintenanceWebApi.Models.WorkOrder", "WorkOrder")
                        .WithMany()
                        .HasForeignKey("woAutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkOrder");
                });

            modelBuilder.Entity("MaintenanceWebApi.Models.HealthAndSafetyItems", b =>
                {
                    b.HasOne("MaintenanceWebApi.Models.HealthAndSafety", "HealthAndSafety")
                        .WithMany()
                        .HasForeignKey("hsAutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MaintenanceWebApi.Models.ProcedureHealthAndSafety", "ProcedureHealthAndSafety")
                        .WithMany()
                        .HasForeignKey("phsAutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MaintenanceWebApi.Models.WorkOrder", "WorkOrder")
                        .WithMany()
                        .HasForeignKey("woAutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HealthAndSafety");

                    b.Navigation("ProcedureHealthAndSafety");

                    b.Navigation("WorkOrder");
                });

            modelBuilder.Entity("MaintenanceWebApi.Models.Instruction", b =>
                {
                    b.HasOne("MaintenanceWebApi.Models.Procedure", "Procedure")
                        .WithMany()
                        .HasForeignKey("pAutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MaintenanceWebApi.Models.WorkOrder", "WorkOrder")
                        .WithMany()
                        .HasForeignKey("woAutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Procedure");

                    b.Navigation("WorkOrder");
                });

            modelBuilder.Entity("MaintenanceWebApi.Models.MethodSteps", b =>
                {
                    b.HasOne("MaintenanceWebApi.Models.Method", "Method")
                        .WithMany()
                        .HasForeignKey("mtAutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Method");
                });

            modelBuilder.Entity("MaintenanceWebApi.Models.ProcedureHealthAndSafety", b =>
                {
                    b.HasOne("MaintenanceWebApi.Models.Procedure", "Procedure")
                        .WithMany()
                        .HasForeignKey("pAutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Procedure");
                });

            modelBuilder.Entity("MaintenanceWebApi.Models.ProcedureMethod", b =>
                {
                    b.HasOne("MaintenanceWebApi.Models.Procedure", "Procedure")
                        .WithMany()
                        .HasForeignKey("pAutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Procedure");
                });

            modelBuilder.Entity("MaintenanceWebApi.Models.StatusAndRepair", b =>
                {
                    b.HasOne("MaintenanceWebApi.Models.WorkOrder", "WorkOrder")
                        .WithMany()
                        .HasForeignKey("woAutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkOrder");
                });

            modelBuilder.Entity("MaintenanceWebApi.Models.WOItems", b =>
                {
                    b.HasOne("MaintenanceWebApi.Models.WorkOrder", "WorkOrder")
                        .WithMany()
                        .HasForeignKey("woAutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkOrder");
                });
#pragma warning restore 612, 618
        }
    }
}
