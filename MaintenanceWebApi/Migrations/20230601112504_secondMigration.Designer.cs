// <auto-generated />
using MaintenanceWebApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MaintenanceWebApi.Migrations
{
    [DbContext(typeof(MaintenanceDbContext))]
    [Migration("20230601112504_secondMigration")]
    partial class secondMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MaintenanceWebApi.Models.Method", b =>
                {
                    b.Property<int>("mtAutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("assetName")
                        .HasColumnType("longtext");

                    b.Property<string>("companyId")
                        .HasColumnType("longtext");

                    b.Property<string>("downTimeValue")
                        .HasColumnType("longtext");

                    b.Property<string>("mtName")
                        .HasColumnType("longtext");

                    b.HasKey("mtAutoId");

                    b.ToTable("methods");
                });

            modelBuilder.Entity("MaintenanceWebApi.Models.MethodSteps", b =>
                {
                    b.Property<int>("msAutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("companyId")
                        .HasColumnType("longtext");

                    b.Property<string>("description")
                        .HasColumnType("longtext");

                    b.Property<int>("mtAutoId")
                        .HasColumnType("int");

                    b.Property<string>("timeRequired")
                        .HasColumnType("longtext");

                    b.Property<string>("toolRequired")
                        .HasColumnType("longtext");

                    b.HasKey("msAutoId");

                    b.HasIndex("mtAutoId");

                    b.ToTable("methodSteps");
                });

            modelBuilder.Entity("MaintenanceWebApi.Models.Procedure", b =>
                {
                    b.Property<int>("pAutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("assetName")
                        .HasColumnType("longtext");

                    b.Property<string>("companyId")
                        .HasColumnType("longtext");

                    b.Property<string>("pName")
                        .HasColumnType("longtext");

                    b.Property<string>("tom")
                        .HasColumnType("longtext");

                    b.HasKey("pAutoId");

                    b.ToTable("procedures");
                });

            modelBuilder.Entity("MaintenanceWebApi.Models.ProcedureHealthAndSafety", b =>
                {
                    b.Property<int>("hsAutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("companyId")
                        .HasColumnType("longtext");

                    b.Property<string>("cpName")
                        .HasColumnType("longtext");

                    b.Property<string>("description")
                        .HasColumnType("longtext");

                    b.Property<int>("pAutoId")
                        .HasColumnType("int");

                    b.HasKey("hsAutoId");

                    b.HasIndex("pAutoId");

                    b.ToTable("procedureHealthAndSafeties");
                });

            modelBuilder.Entity("MaintenanceWebApi.Models.ProcedureMethod", b =>
                {
                    b.Property<int>("pmAutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("companyId")
                        .HasColumnType("longtext");

                    b.Property<int>("pAutoId")
                        .HasColumnType("int");

                    b.Property<string>("pmName")
                        .HasColumnType("longtext");

                    b.Property<string>("subItemPosition")
                        .HasColumnType("longtext");

                    b.HasKey("pmAutoId");

                    b.HasIndex("pAutoId");

                    b.ToTable("procedureMethods");
                });

            modelBuilder.Entity("MaintenanceWebApi.Models.MethodSteps", b =>
                {
                    b.HasOne("MaintenanceWebApi.Models.Method", "Method")
                        .WithMany()
                        .HasForeignKey("mtAutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Method");
                });

            modelBuilder.Entity("MaintenanceWebApi.Models.ProcedureHealthAndSafety", b =>
                {
                    b.HasOne("MaintenanceWebApi.Models.Procedure", "Procedure")
                        .WithMany()
                        .HasForeignKey("pAutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Procedure");
                });

            modelBuilder.Entity("MaintenanceWebApi.Models.ProcedureMethod", b =>
                {
                    b.HasOne("MaintenanceWebApi.Models.Procedure", "Procedure")
                        .WithMany()
                        .HasForeignKey("pAutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Procedure");
                });
#pragma warning restore 612, 618
        }
    }
}
